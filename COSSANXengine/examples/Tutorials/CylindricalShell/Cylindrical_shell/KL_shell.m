function x_KL_FE = KL_shell(mean_imp, eigval, eigvec, rv1, rv2, rv3, rv4, rv5, rv6, Thickness)

% function KL_shell(Xinput)
% new version, to be used with the COSSAN use case
%
% Generate a KL sample of the cylinder geometric imperfection. 
% 
% INPUT: Xinput object
% OUTPUT: imperfection field 

% mesh properties of the field from data
wid=15;
len=50;

% mesh properties of the FE model
wid_FE=101;
len_FE=193;

Vrv = [rv1, rv2, rv3, rv4, rv5, rv6];

%% Karunen-Leuve representation of the imperfection random field
% x stores the random field generated by the K-L representation
n_eig = length(eigval);
x_KL=zeros(length(mean_imp),1);
for i=1:n_eig
    x_KL=x_KL+Vrv(i)*eigvec(:,i)*sqrt(eigval(i));
end
x_KL = x_KL+mean_imp;
% transform the row vector containing the random field in a (len x wid)
% quadratic grid
x_KL = reshape(x_KL,wid,len);
% interpolate the random field on the desired mesh (used by FE analysis)
x_KL_FE = INTER(x_KL,wid_FE,len_FE);
% reshape the random field matrix to a vector
x_KL_FE=x_KL_FE(:,end:-1:1)';
x_KL_FE = reshape(x_KL_FE,wid_FE*len_FE,1)*Thickness ;




function r=INTER(A,v,u)
% from an original function of CAS

[N,M]=size(A);
[x,y]=meshgrid(1:M,1:N);
[xi,yi]=meshgrid(1:(M-1)/(u-1):M,1:(N-1)/(v-1):N);
rfd=interp2(x,y,A,xi,yi,'bicubic');

r=rfd;