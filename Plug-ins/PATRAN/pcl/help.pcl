 
$***************************
$ Written by Murat Panayirci
$***************************

$******************************
$ Last Modified on 20-Oct-2008
$******************************

$***************************************
$ Creating Response Specification Form
$*************************************** 

CLASS help

$*******************************************
$ Defining all the widgets used in the form
$*******************************************

CLASSWIDE widget main_form,close_button,switch_button1,text1,text2,text3,text4,text5,text6

FUNCTION INIT()

$************************
$ Creating the main form
$************************

main_form = ui_form_create( "", 2, 0.3, "UL", 11, 9.5, "PATRAN PLUGIN HELP", "" )

$********************
$ Creating buttons
$********************

close_button = ui_button_create(main_form, "help_close", 8.5 , 8.8, 1.0, 0.5, "CLOSE", TRUE, TRUE)


$************************
$ Creating switch buttons
$************************

switch_button1 = ui_switch_create(main_form, "contents" ,0.2,0.2, 1, "Content", TRUE )

$**************************************
$ Creating options for switch buttons
$**************************************

ui_item_create( switch_button1, "1", "Getting Started", TRUE )
ui_item_create( switch_button1, "2", "How to perform DMCS", FALSE )
ui_item_create( switch_button1, "3", "How to perform SFEM", FALSE )
ui_item_create( switch_button1, "4", "Important tips", FALSE )
ui_item_create( switch_button1, "5", "Limitations", FALSE )
ui_item_create( switch_button1, "6", "Additional Remarks", FALSE )

$*************************
$ Generate the help text
$*************************

text1 = ui_text_create (main_form, "", 3.1,0.2, 7.5, 40, "Getting Started", "This section is to describe the initial steps before starting using PATRAN PLUGIN: \n" @
                // " \n" @
                // "1. Preparation of the session file 'cossan_analysis.ses.01':  \n" @
                // " \n" @
                // "    - Go to File/Session/Record \n" @
                // " \n" @
                // "    - Select filename for recording file as 'cossan_analysis.ses.01' & Click Apply\n" @
                // " \n" @
                // "    - Go to Analysis/Analyze - Entire Model - Analysis Deck Menu\n" @
                // " \n" @
                // "    - Assign the jobname as 'cossan_analysis' \n" @
                // " \n" @
                // "    - Once the analysis type & parameters are selected, click Apply \n" @
                // " \n" @
                // "    - Switch to File/Session/Record Menu again and STOP the recording \n" @
                // " \n" @
                // "    - Observe that the 'cossan_analysis.ses.01' file is generated in working directory \n" @
                // " \n" @
                // "    - To check session file, type '!! input cossan_analysis.ses.01' to command console \n" @
                // " \n" @
                // "    - Observe that the cossan_analysis.bdf file is created in the working directory \n" @
                // " \n" @
                // "2. Attaching the results to PATRAN database\n" @
                // " \n" @
                // " - Run the 'cossan_analysis.bdf' file with NASTRAN and obtain 'cossan_analysis.xdb' file \n" @
                // " \n" @
                // " - Attach the xdb file to the database using Analysis/Access Results Menu \n" @
                // " \n" @
                // " - Select the results file ''cossan_analysis.xdb' and click APPLY \n" @
                // " \n" @
                // " - Observe that the results are attached correctly using the RESULTS Menu \n" @
		 , FALSE, TRUE)



text2 = ui_text_create (main_form, "", 3.1,0.2, 7.5, 40, "Steps to perform DMCS analysis", "1. Open the deterministic FE model in PATRAN \n " @
                // " \n" @
                // "2. Make sure that the session file 'cossan_analysis.ses.01' is prepared and the  \n" @
                // " \n" @
                // "  results are attached properly to PATRAN database \n" @
                // " \n" @
                // "  (See 'Getting started' section for more information on this) \n" @
                // " \n" @
                // "3. Use COSSAN/DMCS Menu to start GUI \n" @
                // " \n" @
                // "4. Select Uncertainty Modelling Type (See 'Additional Remarks' section for Random Field modelling) \n" @
                // " \n" @
                // "5. Adjust the list of structural properties to be assigned as random   \n" @
                // " \n" @
                // " - NOTE: This step can be skipped.   \n" @
                // " \n" @
                // "6. Select the parameters required to define the probabilistic model  \n" @
                // " \n" @
                // "7. Enter no of simulations to be performed & click SHOW  \n" @
                // " \n" @
                // "8. Use GET-MODIFY-DELETE buttons to finalize the list for random parameters  \n" @
                // " \n" @
                // "9. Once the list is ready, click ACCEPT to prepare input file for COSSAN-X  \n" @
                // " \n" @
                // "10. Click SIMULATE in order to run COSSAN-X & Obtain the samples  \n" @
                // " \n" @
                // "11. Select the quantity of interest to be extracted using RESPONSE GUI  \n" @
                // " \n" @
                // "12. Make sure paths of NASTRAN&MATLAB are correct & both programs run on your PC  \n" @
                // " \n" @
                // "13. Click RUN to start the simulations  \n" @
		 , FALSE, TRUE)

text3 = ui_text_create (main_form, "", 3.1,0.2, 7.5, 40, "Steps to perform SFEM analysis", "1. Open the deterministic FE model in PATRAN \n " @
                // " \n" @
                // "2. Make sure that the session file 'cossan_analysis.ses.01' is prepared  \n" @
                // " \n" @
                // "  (See 'Getting started' section for more information on this) \n" @
                // " \n" @
                // "3. Use COSSAN/SFEM Menu to start GUI \n" @
                // " \n" @
                // "4. Select the method \n" @
                // " \n" @
                // "5. Click on 'SHOW' button to visualize the potential random parameters \n" @
                // " \n" @
                // "6. Use GET-MODIFY-DELETE buttons to finalize the list for random parameters  \n" @
                // " \n" @
                // "7. Enter no of simulations to be performed (Applies only if 'Neumann' is chosen as method)  \n" @
                // " \n" @
                // "8. Specify the analysis type (See 'Additional Remarks' section for Component-Wise Analysis) \n" @
                // " \n" @
                // "9. Enter the jobname (Jobname has to be upper case) \n" @
                // " \n" @
                // "10. Enter the DOF in the displacement vector for which the statistics are to be calculated \n" @
                // " \n" @
                // "11. Click ACCEPT to prepare input file for COSSAN-X  \n" @
                // " \n" @
                // "12. Make sure that the MATLAB path is correct \n" @
                // " \n" @
                // "13. Click RUN to start the analysis  \n" @
                // " \n" @
		 , FALSE, TRUE)

text4 = ui_text_create (main_form, "", 3.1,0.2, 7.5, 30, "Important Tips", "1. Don't use '_' character to name MAT & PROP cards + GROUP names\n " @
                // " \n" @
                // "2. Don't assign more than one PROP/MAT card to a region where an RF is to be defined \n" @
                // " \n" @
                // "3. Don't assign a random field to region which contains more than 10,000 elements\n" @
                // " \n" @
                // "4. Don't assign a random field to region with a geometry different than a flat surface or a cylinder\n" @
                // " \n" @
                // "5. Include the nodes as well as the elements while creating groups\n" @
                // " \n" @
                // "6. It is mandatory to use the jobname 'cossan_analysis' \n" @
                // " \n" @
                // "7. It is mandatory to name the session file as 'cossan_analysis.ses.01' \n" @
                // " \n" @
                // "8. Don't attach more than one xdb file to the database \n" @
                // " \n" @
                // "9. The no of KL terms assigned to a random field cannot be larger than the no of elements in that random field\n" @
		, FALSE, TRUE)

text5 = ui_text_create (main_form, "", 3.1,0.2, 7.5, 30, "Limitations", "1. DMCS and SFEM analysis apply only to linear static analysis\n " @
                // " \n" @
                // "2. Random fields can be defined only on flat surfaces and on cylinders \n" @
                // " \n" @
                // "3. Random field modelling is not available for SFEM analysis\n" @
                // " \n" @
                // "4. Only Young's Modulus can be assigned as the random property for SFEM analysis\n" @
                // " \n" @
                // "5. Only the displacement at a certain DOF can be selected as response in SFEM analysis\n" @
                // " \n" @
                // "6. Random field and random variable modelling cannot be used together in DMCS analysis\n" @
		, FALSE, TRUE)

text6 = ui_text_create (main_form, "", 3.1,0.2, 7.5, 30, "Additonal Remarks", "1. GROUPS have to be defined for two cases:\n " @
                // " \n" @
                // " - Performing DMCS analysis using Random Field modelling \n" @
                // " \n" @
                // " - Performing SFEM analysis using Component-Wise Analysis approach \n" @
                // " \n" @
                // " Follow the following steps in order to obtain the required groups required for DMCS analysis: \n" @
                // " \n" @
                // " - Go to Groups/Create Menu \n" @
                // " \n" @
                // " - Select the method as 'Property Type'  \n" @
                // " \n" @
                // " - Enter the name for the group  \n" @
                // " \n" @
                // " - Select the property card from the list 'Property Types' \n" @
                // " \n" @
                // " - Click on 'Apply' \n" @
                // " \n" @
                // " - A group is created now including all elements which are assigned to the selected property card \n" @
                // " \n" @
                // " - The elements in the created group can be used now for random field modelling \n" @
                // " \n" @
                // " If Component-wise SFEM analysis is selected, perform the following steps :\n" @
                // " \n" @
                // " - Create the groups as defined above for the elements containing random Young's modulus \n" @
                // " \n" @
                // " - Set this group as current using 'Group/Set Current' menu \n" @
                // " \n" @
                // " - Go to Analysis menu and select 'Selected Group/Analysis Deck' \n" @
                // " \n" @
                // " - Assign the jobname as the 'randommaterialcardname_E' (e.g. steel_E) \n" @
                // " \n" @
                // " - click 'Apply' and observe that the NASTRAN input file is created for the selected group \n" @
                // " \n" @
                // " 2. Following naming convention has been followed within PATRAN PLUGIN for fully correlated (RV) random parameters:\n" @
                // " \n" @
                // " - Cardname_Randompropertyname \n" @
                // " \n" @
                // " Ex: If the Young's modulus value in a material card called 'titanium' is assigned as random,titanium_E \n" @
                // " \n" @
                // "     Then it is named and listed as 'titanium_E' on the GUI \n" @
                // " \n" @
                // " 3. Following naming convention has been followed within PATRAN PLUGIN for random fields:\n" @
                // " \n" @
                // " - Groupname_Randompropertyname \n" @
                // " \n" @
                // " Ex: If the Young's modulus value in a group called 'frontwindow' is to be modelled using random fields  \n" @
                // " \n" @
                // "     Then the random property is named and listed as 'frontwindow_E' on the GUI \n" @
                // " \n" @
                // " 4. Here is the list of abbreviations used for the random properties available:\n" @
                // " \n" @
                // " - E: Young's Modulus \n" @
                // " \n" @
                // " - nu: Poisson Ratio \n" @
                // " \n" @
                // " - rho: Material Density \n" @
                // " \n" @
                // " - t: Shell Thickness\n" @
                // " \n" @
                // " - pr1: First parameter of the cross section\n" @
                // " \n" @
                // " - pr2: Second parameter of the cross section\n" @
                // " \n" @
                // " - pr3: Third parameter of the cross section\n" @
                // " \n" @
                // " - pr4: Fourth parameter of the cross section\n" @
                // " \n" @
		, FALSE, TRUE)

ui_wid_set(text1,"DISPLAY",TRUE)
ui_wid_set(text2,"DISPLAY",FALSE)	
ui_wid_set(text3,"DISPLAY",FALSE)
ui_wid_set(text4,"DISPLAY",FALSE)
ui_wid_set(text5,"DISPLAY",FALSE)
ui_wid_set(text6,"DISPLAY",FALSE)

END FUNCTION

$******************************************
$ Switch button to select HELP contents
$******************************************

FUNCTION contents(item1, item2)

STRING item1 [], item2 []

IF (item1== "1" && item2 == "ON" ) THEN

	ui_wid_set(text1,"DISPLAY",TRUE)
	ui_wid_set(text2,"DISPLAY",FALSE)
	ui_wid_set(text3,"DISPLAY",FALSE)
	ui_wid_set(text4,"DISPLAY",FALSE)
	ui_wid_set(text5,"DISPLAY",FALSE)
	ui_wid_set(text6,"DISPLAY",FALSE)

ELSE IF (item1== "2" && item2 == "ON" ) THEN

	ui_wid_set(text1,"DISPLAY",FALSE)
	ui_wid_set(text2,"DISPLAY",TRUE)
	ui_wid_set(text3,"DISPLAY",FALSE)
	ui_wid_set(text4,"DISPLAY",FALSE)
	ui_wid_set(text5,"DISPLAY",FALSE)
	ui_wid_set(text6,"DISPLAY",FALSE)

ELSE IF (item1== "3" && item2 == "ON" ) THEN

	ui_wid_set(text1,"DISPLAY",FALSE)
	ui_wid_set(text2,"DISPLAY",FALSE)
	ui_wid_set(text3,"DISPLAY",TRUE)
	ui_wid_set(text4,"DISPLAY",FALSE)
	ui_wid_set(text5,"DISPLAY",FALSE)
	ui_wid_set(text6,"DISPLAY",FALSE)

ELSE IF (item1== "4" && item2 == "ON" ) THEN

	ui_wid_set(text1,"DISPLAY",FALSE)
	ui_wid_set(text2,"DISPLAY",FALSE)
	ui_wid_set(text3,"DISPLAY",FALSE)
	ui_wid_set(text4,"DISPLAY",TRUE)
	ui_wid_set(text5,"DISPLAY",FALSE)
	ui_wid_set(text6,"DISPLAY",FALSE)

ELSE IF (item1== "5" && item2 == "ON" ) THEN

	ui_wid_set(text1,"DISPLAY",FALSE)
	ui_wid_set(text2,"DISPLAY",FALSE)
	ui_wid_set(text3,"DISPLAY",FALSE)
	ui_wid_set(text4,"DISPLAY",FALSE)
	ui_wid_set(text5,"DISPLAY",TRUE)
	ui_wid_set(text6,"DISPLAY",FALSE)

ELSE IF (item1== "6" && item2 == "ON" ) THEN

	ui_wid_set(text1,"DISPLAY",FALSE)
	ui_wid_set(text2,"DISPLAY",FALSE)
	ui_wid_set(text3,"DISPLAY",FALSE)
	ui_wid_set(text4,"DISPLAY",FALSE)
	ui_wid_set(text5,"DISPLAY",FALSE)
	ui_wid_set(text6,"DISPLAY",TRUE)

END IF

END FUNCTION


$***********************
$ Displaying the form
$***********************

FUNCTION DISPLAY()

ui_form_display("help")

END FUNCTION

$********************
$ Closing the form
$********************

FUNCTION help_close()

ui_form_hide("help")

END FUNCTION


END CLASS